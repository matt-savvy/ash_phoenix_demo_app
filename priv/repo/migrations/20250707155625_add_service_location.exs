defmodule MyApp.Repo.Migrations.AddServiceLocation do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:service_locations, primary_key: false) do
      add :service_id,
          references(:services,
            column: :id,
            name: "service_locations_service_id_fkey",
            type: :bigint,
            prefix: "public",
            on_delete: :delete_all
          ),
          primary_key: true,
          null: false

      add :location_id,
          references(:locations,
            column: :id,
            name: "service_locations_location_id_fkey",
            type: :bigint,
            prefix: "public",
            on_delete: :delete_all
          ),
          primary_key: true,
          null: false
    end

    create index(:service_locations, [:service_id])

    create index(:service_locations, [:location_id])
  end

  def down do
    drop_if_exists index(:service_locations, [:location_id])

    drop_if_exists index(:service_locations, [:service_id])

    drop constraint(:service_locations, "service_locations_service_id_fkey")

    drop constraint(:service_locations, "service_locations_location_id_fkey")

    drop table(:service_locations)
  end
end
